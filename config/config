##################################### Path ###########################################
## Root directory
ROOT="$(dirname "$(dirname "$(readlink -fm "$0")")")"

## Config directory
CONFIG="$ROOT/config"
## Board configuratios directory
BOARD_CONFIG="$CONFIG/boards"
## Boot scripts
BOOT_SCRIPTS="$CONFIG/bootscripts"
## Boot environment
BOOT_ENV="$CONFIG/bootenv"
## Download packages directory
DOWNLOAD_PKG_DIR="$ROOT/downloads"
## Packages directory
PKGS_DIR="$ROOT/packages"
## Packages build directory
BUILD="$ROOT/build"
## Build images
BUILD_IMAGES="$BUILD/images"
## Build debs
BUILD_DEBS="$BUILD_IMAGES/debs"
## Rootfs mount point
ROOTFS="$BUILD_IMAGES/rootfs"
## Rootfs temp file directory
ROOTFS_TEMP="$BUILD_IMAGES/.tmp/rootfs-${KHADAS_BOARD}-${DISTRIB_RELEASE}-${DISTRIB_TYPE}"
## Toolchains
TOOLCHAINS="$BUILD/toolchains"

UTILS_DIR="$BUILD/utils-[0-9a-f]*"
UPGRADE_DIR="$BUILD/images_upgrade-[0-9a-f]*"

##################################### Configurations ##################################
FENIX_BRANCH="master"
## U-boot & Linux GitHub URL
LINUX_SOURCE_URL="https://github.com/khadas/linux"
UBOOT_SOURCE_URL="https://github.com/khadas/u-boot"

ROOTFSCACHE_VERSION=5
IMAGE_RELEASE_VERSION="V${VERSION}-$(date +%F | sed 's/-//g')"

NR_JOBS_MAX=20
NR_CPUS=$(grep -c processor /proc/cpuinfo)
if [ ${NR_CPUS} -le ${NR_JOBS_MAX} ]; then
	NR_JOBS=${NR_CPUS}
else
	NR_JOBS=${NR_JOBS_MAX}
fi

if [ "$LINUX" == "mainline" ]; then
	MAINLINE_LINUX_VER=$(grep "PKG_VERSION=" $PKGS_DIR/linux-mainline/package.mk | awk -F '"' '{print $2}')
fi

if [ "$UBOOT" == "mainline" ]; then
	MAINLINE_UBOOT_VER=$(grep "PKG_VERSION=" $PKGS_DIR/u-boot-mainline/package.mk | awk -F '"' '{print $2}')
	LINUX_UBOOT_DEB="linux-u-boot-${KHADAS_BOARD,,}-mainline"
else
	LINUX_UBOOT_DEB="linux-u-boot-${KHADAS_BOARD,,}-vendor"
fi

UBOOT_VER=${UBOOT/mainline/$MAINLINE_UBOOT_VER}

IMAGE_FILE_NAME="${KHADAS_BOARD}_${DISTRIBUTION}-${DISTRIB_TYPE}-${DISTRIB_RELEASE}_Linux-${LINUX/mainline/$MAINLINE_LINUX_VER}_${DISTRIB_ARCH}_${INSTALL_TYPE}_${IMAGE_RELEASE_VERSION}.img"
LINUX_IMAGE_DEB="linux-image-${VENDOR,,}-${LINUX}"
LINUX_FIRMWARE_DEB="linux-firmware-image-${VENDOR,,}-${LINUX}"

LINUX_BOARD_DEB="linux-board-package-${DISTRIB_RELEASE,,}-${KHADAS_BOARD,,}"

FENIX_UPDATER_DEB="fenix-updater-package-${DISTRIB_RELEASE,,}-${KHADAS_BOARD,,}-${LINUX}"

if [ "$DISTRIB_TYPE" != "server" ]; then
	FENIX_DESKTOP_DEB="fenix-${DISTRIBUTION,,}-${DISTRIB_RELEASE}-${DISTRIB_TYPE}-desktop"
fi

case $DISTRIB_ARCH in
	arm64)
	INITRD_ARCH=arm64
	QEMU_BINARY="qemu-aarch64-static"
	;;
	armhf)
	INITRD_ARCH=arm
	QEMU_BINARY="qemu-arm-static"
	;;
esac

DEST_LANG="en_US.UTF-8"
CONSOLE_CHAR="UTF-8"

# Give the option to configure DNS server used in the chroot during the build process
NAMESERVER="1.0.0.1" # default is cloudflare alternate


ROOTFS_TYPE="ext4"
BOOTFS_TYPE="fat"

if [ "$BUILD_TYPE" == "release" ]; then
	TZDATA="Etc/UTC" # Use 'Etc/UTC' when release images.
else
	TZDATA=`cat /etc/timezone` # Timezone for target is taken from host or defined here.
fi

## Define colors
BLACK="\e[0;30m"
BOLDBLACK="\e[1;30m"
RED="\e[0;31m"
BOLDRED="\e[1;31m"
GREEN="\e[0;32m"
BOLDGREEN="\e[1;32m"
YELLOW="\e[0;33m"
BOLDYELLOW="\e[1;33m"
BLUE="\e[0;34m"
BOLDBLUE="\e[1;34m"
MAGENTA="\e[0;35m"
BOLDMAGENTA="\e[1;35m"
CYAN="\e[0;36m"
BOLDCYAN="\e[1;36m"
WHITE="\e[0;37m"
BOLDWHITE="\e[1;37m"
ENDCOLOR="\e[0m"

##
ERROR="${RED}Error:${ENDCOLOR}"
WARNING="${YELLOW}Warning:${ENDCOLOR}"
INFO="${GREEN}Info:${ENDCOLOR}"

################################### Packages ############################################
# Base system dependencies
DEBOOTSTRAP_LIST="locales,gnupg,ifupdown,apt-transport-https,ca-certificates"
if [[ $DISTRIB_TYPE != server ]]; then
	DEBOOTSTRAP_LIST+=",libgtk2.0-bin"
fi

# Essential packages
PACKAGE_LIST="bc bridge-utils build-essential cpufrequtils device-tree-compiler figlet fbset fping \
	iw fake-hwclock wpasupplicant psmisc ntp parted rsync sudo curl linux-base dialog crda \
	wireless-regdb ncurses-term python3-apt sysfsutils toilet u-boot-tools unattended-upgrades \
	usbutils wireless-tools console-setup unicode-data openssh-server initramfs-tools \
	resolvconf expect iptables mc abootimg wget udev libc6 libdrm2 libgcc1 libstdc++6 libx11-6 \
	libx11-xcb1 libxcb-dri2-0 libxcb1"

# development related packages. remove when they are not needed for building packages in chroot
PACKAGE_LIST="$PACKAGE_LIST automake libwrap0-dev libssl-dev libnl-3-dev libnl-genl-3-dev"

# Non-essential packages
PACKAGE_LIST_ADDITIONAL="alsa-utils btrfs-tools dosfstools hddtemp iotop iozone3 stress sysbench screen ntfs-3g vim pciutils \
	evtest htop pv lsof libfuse2 libdigest-sha-perl libproc-processtable-perl aptitude dnsutils f3 haveged \
	hdparm rfkill vlan sysstat bash-completion hostapd git ethtool network-manager unzip ifenslave command-not-found lirc \
	libpam-systemd iperf3 software-properties-common libnss-myhostname f2fs-tools avahi-autoipd iputils-arping bluetooth bluez bluez-tools watchdog \
	i2c-tools qrencode mesa-utils-extra rng-tools clinfo ocl-icd-libopencl1 libatlas3-base p7zip p7zip-full lrzip lzip lzop ncompress unar zstd edid-decode libgtk-3-0 dnsmasq-base"

PACKAGE_LIST_DESKTOP="xserver-xorg xserver-xorg-video-fbdev gvfs-backends gvfs-fuse xfonts-base xinit x11-xserver-utils xterm thunar-volman \
	network-manager-gnome network-manager-openvpn-gnome gnome-keyring gcr libgck-1-0 p11-kit pasystray pavucontrol pulseaudio \
	pavumeter pulseaudio-module-gconf pulseaudio-module-bluetooth blueman libgl1-mesa-dri gparted synaptic \
	policykit-1 mesa-utils gnome-orca numix-gtk-theme gnome-system-tools gufw gedit yad zenity guvcview"

PACKAGE_LIST_OFFICE="lxtask mirage galculator hexchat mpv \
	gtk2-engines gtk2-engines-murrine gtk2-engines-pixbuf libgnome2-perl \
	libpam-gnome-keyring thunderbird system-config-printer-common paprefs tango-icon-theme \
	libreoffice-writer libreoffice-style-tango libreoffice-gtk fbi cups-pk-helper cups libreoffice"

PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP lightdm lightdm-gtk-greeter lightdm-gtk-greeter-settings"

PACKAGE_LIST_XSERVER="libunwind8 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xf86dri0 libxcb-xkb1 libxcb-xv0 \
	libpixman-1-dev x11proto-core-dev x11proto-input-dev x11proto-xext-dev x11proto-video-dev x11proto-randr-dev x11proto-render-dev x11proto-dri2-dev \
	x11proto-gl-dev x11proto-fonts-dev x11proto-xinerama-dev x11proto-kb-dev x11proto-xf86dri-dev x11proto-resource-dev x11proto-scrnsaver-dev \
	x11proto-xf86bigfont-dev x11proto-dri3-dev x11proto-present-dev libxfont-dev libxkbfile-dev libpciaccess-dev mesa-common-dev"

PACKAGE_LIST_GSTREAMER="gstreamer1.0-libav gstreamer1.0-plugins-bad gstreamer1.0-tools gstreamer1.0-plugins-base gstreamer1.0-alsa \
	gstreamer1.0-plugins-good libconfig++9v5 libconfig9"

PACKAGE_LIST_QT="libqt5opengl5 libqt5qml5 libqt5quick5 libqt5widgets5 libqt5gui5 libqt5core5a qml-module-qtquick2 \
	libqt5multimedia5 libqt5multimedia5-plugins libqt5multimediaquick-p5 qml-module-qt-labs-folderlistmodel qml-module-qtmultimedia \
	libqgsttools-p1 libqt5multimediawidgets5 qtbase5-dev libglib2.0-dev libpulse-dev"

PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP $PACKAGE_LIST_XSERVER"

case $DISTRIB_TYPE in
	xfce)
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP $PACKAGE_LIST_OFFICE"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP xfce4 xfce4-screenshooter xfce4-notifyd xfce4-terminal desktop-base software-properties-gtk thunar-archive-plugin xarchiver"
	[[ $DISTRIBUTION == Ubuntu ]] && PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP update-manager"
	;;
	lxde)
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP $PACKAGE_LIST_OFFICE"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP lxde lxlauncher lxmusic lxsession-default-apps lxsession-logout lxshortcut lxtask obconf \
		xfce4-power-manager-plugins lxde-common desktop-base"
	;;
esac

case $DISTRIB_RELEASE in
	stretch)
	DEBOOTSTRAP_COMPONENTS="main"
	PACKAGE_LIST_RELEASE="man-db less kbd net-tools netcat-openbsd gnupg2 dirmngr"
	PACKAGE_LIST_KODI="libglu1-mesa libglu1 libmicrohttpd12 libpcrecpp0v5 libssh-4 libtag1v5 libtinyxml2.6.2v5 libva-drm1 libcurl3"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP $PACKAGE_LIST_GSTREAMER $PACKAGE_LIST_QT $PACKAGE_LIST_KODI"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP chromium dbus-x11 gksu profile-sync-daemon"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP paman libgcr-3-common gcj-jre-headless"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP system-config-printer"
	;;
	buster)
	DEBOOTSTRAP_COMPONENTS="main"
	PACKAGE_LIST_RELEASE="man-db less kbd net-tools netcat-openbsd gnupg2 dirmngr"
	PACKAGE_LIST_KODI="libglu1-mesa libglu1 libmicrohttpd12 libpcrecpp0v5 libssh-4 libtag1v5 libtinyxml2.6.2v5 libva-drm1 libcurl3"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP $PACKAGE_LIST_GSTREAMER $PACKAGE_LIST_QT $PACKAGE_LIST_KODI"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP chromium dbus-x11 gksu profile-sync-daemon"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP paman libgcr-3-common gcj-jre-headless"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP system-config-printer"
	;;
	bionic)
	DEBOOTSTRAP_COMPONENTS="main,universe"
	PACKAGE_LIST_RELEASE="man-db less kbd net-tools netcat-openbsd gnupg2 dirmngr nano wget libjpeg9"
	PACKAGE_LIST_KODI="libglu1-mesa libglu1 libpcrecpp0v5 libssh-4 libtag1v5 libtinyxml2.6.2v5 libcurl4 libcrossguid0 libmariadbclient18 libmicrohttpd12 \
		libavahi-compat-libdnssd-dev libcec4 libfstrcmp0 libnfs11 fonts-liberation python-bluez python-pil python-simplejson libaacs0 fonts-dejavu-core libao-dev"
	PACKAGE_LIST_SERVER_KODI="libao4 libwayland-cursor0 libavahi-compat-libdnssd-dev libass9 libavahi-client3 libavahi-common3 libbluray2 libcdio17 libcec4 \
		libfreetype6 libfstrcmp0 libinput10 liblcms2-2 libmicrohttpd12 libnfs11 libpcrecpp0v5 libpulse0 libsmbclient libtag1v5 libtinyxml2.6.2v5 libxkbcommon0 \
		libxslt1.1  mesa-utils x11-utils fonts-liberation fonts-dejavu-core python-bluez python-pil python-simplejson libgif7 libvorbisfile3 libaacs0 libgnutls30 \
		libyajl2 libsndio6.1 libcrossguid0 libao-dev"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP $PACKAGE_LIST_GSTREAMER $PACKAGE_LIST_QT"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP $PACKAGE_LIST_KODI chromium-browser xserver-xorg-input-all dbus-x11 profile-sync-daemon firefox"
	PACKAGE_LIST_DESKTOP="$PACKAGE_LIST_DESKTOP system-config-printer system-config-printer-gnome language-selector-gnome"
	;;
esac

DEBIAN_MIRROR=${USER_MIRROR-'httpredir.debian.org/debian'}
UBUNTU_MIRROR=${USER_MIRROR-'ports.ubuntu.com/'}

# apt-cacher-ng mirror configurarion
if [[ $DISTRIBUTION == Ubuntu ]]; then
	APT_MIRROR=$UBUNTU_MIRROR
else
	APT_MIRROR=$DEBIAN_MIRROR
fi

PACKAGE_LIST="$PACKAGE_LIST $PACKAGE_LIST_RELEASE $PACKAGE_LIST_ADDITIONAL"
if [[ $DISTRIB_TYPE != server ]]; then
	PACKAGE_LIST="$PACKAGE_LIST $PACKAGE_LIST_DESKTOP"
else
	PACKAGE_LIST="$PACKAGE_LIST $PACKAGE_LIST_SERVER_KODI $PACKAGE_LIST_GSTREAMER"
fi

