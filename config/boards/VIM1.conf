# Khadas VIM1 Amlogic S905X
SUPPORTED_UBOOT=("2015.01" "mainline")
SUPPORTED_LINUX=("3.14" "4.9" "mainline")

case "$UBOOT" in
	2015.01)
		UBOOT_COMPILER="aarch64-none-elf-"
		UBOOT_COMPILER_PATH="$TOOLCHAINS/gcc-linaro-aarch64-none-elf/bin:$TOOLCHAINS/gcc-linaro-arm-none-eabi/bin"
		UBOOT_DEFCONFIG="kvim_defconfig"
		UBOOT_GIT_BRANCH="khadas-vim-v2015.01"
	;;
	mainline)
		UBOOT_COMPILER="aarch64-elf-"
		UBOOT_COMPILER_PATH="$TOOLCHAINS/gcc-linaro-aarch64-elf/bin"
		UBOOT_DEFCONFIG="khadas-vim_defconfig"
		UBOOT_GIT_BRANCH="master"
	;;
esac

UBOOT_FORCE_REBUILD="yes"

KERNEL_COMPILER="aarch64-linux-gnu-"

case "$LINUX" in
	mainline)
		KERNEL_COMPILER_PATH="$TOOLCHAINS/gcc-linaro-aarch64-linux-gnu/bin"
		LINUX_DTB="arch/arm64/boot/dts/amlogic/meson-gxl-s905x-khadas-vim.dtb"
		LINUX_DIR="$BUILD/linux-mainline-*"
		LINUX_GIT_BRANCH="master"
		LINUX_DEFCONFIG="defconfig"
		SERIALCON="ttyAML0"
		BOOT_SCRIPT_BOARD="s905_autoscript.cmd"
		GPU_VER="r7p0"
		GPU_PLATFORM="x11"
		GPU_DESC="m450-X"
		MODULES="mali brcmfmac"
		;;
	3.14)
		KERNEL_COMPILER_PATH="$TOOLCHAINS/gcc-linaro-aarch64-linux-gnu-6.3/bin"
		LINUX_DTB="arch/arm64/boot/dts/kvim_linux.dtb"
		LINUX_DIR="$ROOT/linux"
		LINUX_GIT_BRANCH="khadas-vim-3.14.y"
		LINUX_DEFCONFIG="kvim_defconfig"
		SERIALCON="ttyS0"
		BOOT_SCRIPT_BOARD="s905_autoscript.cmd"
		GPU_VER="r5p1"
		GPU_PLATFORM="fbdev"
		GPU_DESC="m450"
		MODULES="dwc3 dwc_otg mali dhd aufs gxbb_wdt"
		;;
	4.9)
		KERNEL_COMPILER_PATH="$TOOLCHAINS/gcc-linaro-aarch64-linux-gnu/bin"
		LINUX_DTB="arch/arm64/boot/dts/amlogic/kvim_linux.dtb"
		LINUX_DIR="$ROOT/linux"
		LINUX_GIT_BRANCH="khadas-vims-4.9.y"
		LINUX_DEFCONFIG="kvims_defconfig"
		SERIALCON="ttyS0"
		BOOT_SCRIPT_BOARD="s905_autoscript.cmd"
		GPU_VER="r7p0"
		GPU_PLATFORM="fbdev"
		GPU_DESC="m450"
		MODULES="mali dhd media_clock firmware decoder_common stream_input amvdec_avs amvdec_h264 amvdec_mh264 amvdec_h264mvc amvdec_h265 amvdec_mjpeg amvdec_mmjpeg amvdec_mpeg12 amvdec_mmpeg12 amvdec_mpeg4 amvdec_mmpeg4 amvdec_real amvdec_vc1 amvdec_vp9 amvdec_avs2 encoder"
		;;
esac

BOOT_SCRIPT_VENDOR="aml_autoscript.txt"
BOOT_INI="aml_boot.ini"

BOOT_ENV_FILE="amlogic_default_env.txt"

####
WIFI_MODEL="Broadcom"
GPU_MODEL="arm-mali-utgard-m450"

CPUMIN=500000
CPUMAX=1536000
GOVERNOR=conservative

##############################
## Pack image
pack_image_platform() {
    cd ${ROOT}

    info_msg "Image install type: $INSTALL_TYPE"
    if [ "$INSTALL_TYPE" == "EMMC" ]; then
		## Fixup upgrade dtb link
		cd $UPGRADE_DIR/Amlogic
		rm -rf kvim.dtb

		case "$LINUX" in
			4.9|3.14)
				ln -s ../../../linux/$LINUX_DTB kvim.dtb

				ln -fs ../../../u-boot/fip/u-boot.bin u-boot.bin
				ln -fs ../../../u-boot/fip/u-boot.bin.sd.bin u-boot.bin.sd.bin
				ln -fs ../../../u-boot/fip/u-boot.bin.usb.bl2 u-boot.bin.usb.bl2
				ln -fs ../../../u-boot/fip/u-boot.bin.usb.tpl u-boot.bin.usb.tpl
				;;
		mainline)
				;;
		esac

		## Fixup platform & package configuration file
		ln -fs package_gx.conf package.conf
		ln -fs platform_gx.conf platform.conf

		cd -

        $UTILS_DIR/aml_image_v2_packer -r $UPGRADE_DIR/Amlogic/package.conf $UPGRADE_DIR/Amlogic $BUILD_IMAGES/${IMAGE_FILE_NAME}
    elif [ "$INSTALL_TYPE" == "SD-USB" ]; then

        IMAGE_LOOP_DEV="$(losetup --show -f ${BUILD_IMAGES}/${IMAGE_FILE_NAME})"
        if [[ -z $IMAGE_LOOP_DEV ]]; then
			error_msg "Unable to find free loop device!"
			return -1
		fi
		partprobe "${IMAGE_LOOP_DEV}"

		check_loop_device "$IMAGE_LOOP_DEV"

		case "$UBOOT" in
			mainline)
				local uboot_sd_image="$BUILD_IMAGES/u-boot-mainline/$KHADAS_BOARD/u-boot.bin.sd.bin"
				;;
			2015.01)
				local uboot_sd_image="$ROOT/u-boot/fip/u-boot.bin.sd.bin"
				;;
		esac

		dd if=$uboot_sd_image of=${IMAGE_LOOP_DEV} conv=fsync bs=1 count=442
		dd if=$uboot_sd_image of=${IMAGE_LOOP_DEV} conv=fsync bs=512 skip=1 seek=1

        losetup -d "${IMAGE_LOOP_DEV}"
    else
        error_msg "Unsupported install type: '$INSTALL_TYPE'"
        return -1
    fi

    echo ""
	info_msg "IMAGE: ${GREEN}$BUILD_IMAGES/$IMAGE_FILE_NAME ${ENDCOLOR} is ready!"
}

## tweaks for platform
tweaks_platform() {
	echo "#Serial console allow root" >> $ROOTFS_TEMP/etc/securetty
	echo "ttyAML0" >> $ROOTFS_TEMP/etc/securetty

	# Enable services
	eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "systemctl --no-reload enable 0hdmi.service bluetooth-khadas.service"'

	# FIXME
	# Only enable ADB service for linux 3.14, 4.9 doesn't work now.
	if [ "$LINUX" == "3.14" ]; then
		eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "systemctl --no-reload enable adb-khadas.service"'
	fi

	# Create boot links
	if [ "$INSTALL_TYPE" == "EMMC" ]; then
		eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "ln -fs /boot/zImage zImage"'
		eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "ln -fs /boot/uInitrd uInitrd"'
		eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "ln -fs /boot/dtb/$(basename $LINUX_DTB) dtb.img"'
	else
		# Setup default DTB for SD/USB images
		if [ "$LINUX" == "mainline" ]; then
			eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "cp /boot/dtb/amlogic/$(basename $LINUX_DTB) /boot/dtb.img"'
		else
			eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "cp /boot/dtb/$(basename $LINUX_DTB) /boot/dtb.img"'
		fi
	fi
}

## Build deb packages for platform
build_deb_packages_platform() {
	if [ "$LINUX" == "3.14" ] || [ "$LINUX" == "4.9" ]; then
		info_msg "Building Kodi packages..."
		# FIXME
		# remove build stamp to force build for other arch
		if [ "$LINUX" == "3.14" ]; then
			if [ ! -d $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}/kodi_s905x ]; then
				rm -rf $BUILD/.stamps/kodi_s905x
			fi
			build_package "kodi_s905x:target"
		else
			if [ ! -d $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}/kodi_s922x ]; then
				rm -rf $BUILD/.stamps/kodi_s922x
			fi
			build_package "kodi_s922x:target"
		fi

		# FIXME
		# remove build stamp to force build for other arch
		if [ ! -d $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}/codec_s905x ]; then
			rm -rf $BUILD/.stamps/codec_s905x
		fi
		build_package "codec_s905x:target"

		# FIXME
		# remove build stamp to force build for other arch
		if [ ! -d $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}/amremote_s905x ]; then
			rm -rf $BUILD/.stamps/amremote_s905x
		fi
		build_package "amremote_s905x:target"
	fi
}

## Install deb packages for platform
install_deb_packages_platform() {
	if [ "$LINUX" == "3.14" ] || [ "$LINUX" == "4.9" ]; then

		cd $ROOT
		# Install Kodi in chroot
		info_msg "Installing Kodi packages..."
		if [ "$LINUX" == "3.14" ]; then
			install_deb_chroot $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}/kodi_s905x/*.deb
		else
			install_deb_chroot $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}/kodi_s922x/*.deb
		fi
		install_deb_chroot $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}/codec_s905x/*.deb
		install_deb_chroot $BUILD_DEBS/$VERSION/$KHADAS_BOARD/${DISTRIBUTION}-${DISTRIB_RELEASE}/amremote_s905x/*.deb

		# Enable khadas remote
		eval 'LC_ALL=C LANG=C chroot $ROOTFS_TEMP /bin/bash -c "systemctl --no-reload enable amlogic-remotecfg.service"'
	fi
}
