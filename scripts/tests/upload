#!/bin/bash

## hyphop ##

#= UPLOAD files

[ "$VERBOSE_" ] && \
echo "%%${0##*/} $@">&2

DIE(){
    echo "[e] $@">&2
    exit 1
}


[ "$VERBOSE_" ] && \
echo "UPLOAD: $UPLOAD
ROOTFS_CACHE: $ROOTFS_CACHE
BUILD_IMAGES: $BUILD_IMAGES
RELEASE_BUILD: $RELEASE_BUILD
IMAGE_FILE_NAME: $IMAGE_FILE_NAME
CREATE_ROOTFS_CACHE_ONLY: $CREATE_ROOTFS_CACHE_ONLY">&2

[ "$UPLOAD" ] || DIE "UPLOAD undefined"
[ "$ROOTFS_CACHE" ] || DIE "ROOTFS_CACHE undefined"
[ "$BUILD_IMAGES" ] || DIE "BUILD_IMAGES undefined"
[ "$IMAGE_FILE_NAME" ] || DIE "IMAGE_FILE_NAME undefined"
[ "$CREATE_ROOTFS_CACHE_ONLY" ] || DIE "CREATE_ROOTFS_CACHE_ONLY undefined"
[ -d "$UPLOAD" ] || DIE "UPLOAD $UPLOAD not exist"
[ -d "$ROOTFS_CACHE" ] || DIE "ROOTFS_CACHE $ROOTFS_CACHE not exist"

UPLOAD_=${UPLOAD#$HIDE_PREF}

[ "$SUDO_UID" ] && \
SUDO_="sudo -u $SUDO_USER"

if [ "$CREATE_ROOTFS_CACHE_ONLY" != "yes" ]; then
	for f in "$BUILD_IMAGES/"$IMAGE_FILE_NAME*; do

	    UPLOAD_REL=/storage/.tmp

	    if [ -e "$f" ]; then
		f_=${f#$BUILD_IMAGES/}
		BDT=
		B=
		D=
		T=
		RAW=
		    case $IMAGE_FILE_NAME in
			vim1-*) B=vim1 ;;
			vim2-*) B=vim2 ;;
			vim3l-*)B=vim3l;;
			vim3-*) B=vim3 ;;
			vim4-*) B=vim4 ;;
			vim1s-*) B=vim1s ;;
			edge1-*) B=edge1 ;;
			edge2-*) B=edge2 ;;
		    esac
		    case $IMAGE_FILE_NAME in
			*ubuntu*) D=ubuntu ;;
			*debian*) D=debian ;; # maybe ;-)
		    esac
		    T=generic
			case $IMAGE_FILE_NAME in
			*emmc*)   T=emmc ;;
		    esac
			RAW=1
			if echo $IMAGE_FILE_NAME | grep emmc; then
				if ! echo $IMAGE_FILE_NAME | grep raw; then
					RAW=
				fi
			fi

		[ "$B" -a "$D" -a "$T" ] && \
			BDT=$B/firmware/$D/$T

		[ "$BUILD_TYPE" = "release" ] && {

		    [ "$BDT" ] && \
		    UPLOAD_REL=/storage/products/$BDT

		    echo "%%UPLOAD-REL: $f_ => $UPLOAD_REL"

		    [ -d "$UPLOAD_REL" ] || \
		    $SUDO_ mkdir -p "$UPLOAD_REL"
		    $SUDO_ cp "$f" "$UPLOAD_REL"
		    echo "%%UPLOAD_FILE: $UPLOAD_REL/$f_"

		    [ "$BDT" -a "$RAW" ] && {
			TO="/storage/Firmware/Krescue/images/$f_"
			$SUDO_ ln -sf "$UPLOAD_REL/$f_" "$TO"
			echo "%%UPLOAD_LINK_KRESCUE: $TO"
		    }
		} # release upload END

		echo "%%UPLOAD: $f_ => $UPLOAD_"
		$SUDO_ mv "$f" "$UPLOAD"
		[ "$BDT" ] && {
		    TO="$UPLOAD_/$BDT/$f_"
		    $SUDO_ mkdir -p "$UPLOAD_/$BDT"
		    $SUDO_ ln -sf "$UPLOAD_REL/$f_" "$TO"
		    echo "%%UPLOAD_LINK: $TO"
		}

		echo "%%UPLOAD_FILE: $UPLOAD_/$f_"

	    else
		echo "%%UPLOAD: $f not exist">&2
	    fi
	done
else
	case $IMAGE_FILE_NAME in
	*minimal*) T=minimal ;;
	*server*) T=server ;;
	*xfce*) T=xfce ;;
	*lxde*) T=lxde ;;
	*gnome*) T=gnome ;;
	esac
	case $IMAGE_FILE_NAME in
	*22.04*) R=jammy ;;
	*20.04*) R=focal ;;
	*18.04*) R=bionic ;;
	*10*) R=buster ;;
	esac

	echo "%%UPLOAD rootfs cache: $BUILD_IMAGES/cache/rootfs/$R-$T-arm64.* => $ROOTFS_CACHE"
	$SUDO_ mkdir -p "$ROOTFS_CACHE"
	$SUDO_ rm -f $ROOTFS_CACHE/$R-$T-arm64.*
	$SUDO_ cp $BUILD_IMAGES/cache/rootfs/$R-$T-arm64.* "$ROOTFS_CACHE"
fi
